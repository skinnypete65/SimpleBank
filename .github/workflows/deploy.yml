name: Deploy to production

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch secret
        id: lockbox-secret
        uses: yc-actions/yc-lockbox@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          secret-id: ${{ secrets.LOCKBOX_ID }}

      - name: Test secrets
        env:
          DB_SOURCE: ${{ steps.lockbox-secret.outputs.DB_SOURCE }}
          DB_DRIVER: ${{ steps.lockbox-secret.outputs.DB_DRIVER }}
          SERVER_ADDRESS: ${{ steps.lockbox-secret.outputs.SERVER_ADDRESS }}
          ACCESS_TOKEN_DURATION: ${{ steps.lockbox-secret.outputs.ACCESS_TOKEN_DURATION }}
          TOKEN_SYMMETRIC_KEY: ${{ steps.lockbox-secret.outputs.TOKEN_SYMMETRIC_KEY }}
        run: |
          echo "
          DB_SOURCE=$DB_SOURCE\n
          DB_DRIVER=$DB_DRIVER\n
          SERVER_ADDRESS=$SERVER_ADDRESS\n
          ACCESS_TOKEN_DURATION=$ACCESS_TOKEN_DURATION\n
          TOKEN_SYMMETRIC_KEY=$TOKEN_SYMMETRIC_KEY\n
          " > app.env
          cat app.env

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_REPOSITORY: ${{ secrets.CR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

